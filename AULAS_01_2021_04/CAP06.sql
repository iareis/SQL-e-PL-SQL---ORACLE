---------------------------------
-- UTILIZANDO FUNÇÕES DE GRUPO --
---------------------------------

-- Agrupar dados utilizand a clausula GROUP BY
-- incluir e excluir linhas agrupadas utilizando a cláusula HAVING

SELECT  COUNT(*)             AS QIDE_REGISTROS,
        AVG(TOTAL)           AS MEDIA,
        ROUND(AVG(TOTAL),2)  AS MEDIA,
        MAX(TOTAL)           AS MAXIMO,
        MIN(TOTAL)           AS MINIMO,
        SUM(TOTAL)           AS SOMA,
        MAX(DATA)            AS DATA_MAIOR,
        MIN(DATA)            AS DATA_MENOR
FROM TCONTRATO;  

-- MOSTRAR QUAL O MAIOR VALOR EM UMA COLUNA E O PRÓXIMO_CÓDIGO DISPONÍVEL
SELECT  MAX(COD_CONTRATO) AS MAIOR_VALOR,
        MAX(COD_CONTRATO) +1 AS PROXIMO_CODIGO
FROM TCONTRATO;

-- 

SELECT * FROM TCONTRATO;

-- TOTAL DE CONTRATOS POR ALUNO

SELECT  COD_ALUNO,
        COUNT(*) AS QTDE_CONSTRATOS,
        SUM(TOTAL) AS VALOR_TOTAL
FROM TCONTRATO
GROUP BY COD_ALUNO
ORDER BY COD_ALUNO;

-- TOTAL DE CONTRATO POR DATA

SELECT  TO_CHAR(TRUNC(DATA), 'DD/MM/YYYY') AS DATA,
        SUM(TOTAL) AS SOMA,
        AVG(TOTAL) AS MEDIA,
        COUNT(*)   AS QTDE 
FROM TCONTRATO
GROUP BY TRUNC(DATA)
ORDER BY DATA DESC   

-- PARA EXEMPLIFICAR VAMOS INSERIR DOIS DESCONTOS NULOS NA TABELA DE CONTRATOS

INSERT INTO TCONTRATO VALUES (8, '12/03/2021', 6, 800, 22);
INSERT INTO TCONTRATO VALUES (9, '17/03/2021', 7, 445, 17);
INSERT INTO TCONTRATO VALUES (10, '18/03/2021', 7, 500, 15);
INSERT INTO TCONTRATO VALUES (11, '22/03/2021', 9, 800, 22);
INSERT INTO TCONTRATO VALUES (12, '24/03/2021', 9, 800, 7);
INSERT INTO TCONTRATO VALUES (13, '29/03/2021', 10, 800, 18);
INSERT INTO TCONTRATO VALUES (14, '12/03/2021', 11, 800, 28);

UPDATE TCONTRATO SET 
DESCONTO = NULL 
WHERE COD_CONTRATO = 3
OR COD_CONTRATO = 4;

SELECT * FROM TCONTRATO;

SELECT COUNT(*) AS QTDE_REGISTROS
FROM TCONTRATO;
/*como colocamos (*) vai contar todas as linhas, INCLUSIVE AS NULAS*/

-- COUNT como função de grupo --> IGNORA NULOS

SELECT COUNT(DESCONTO)
FROM TCONTRATO;

-- QUANTIDADE DE ESTADOS REGISTRADOS NA TABELA ALUNO

SELECT COUNT(ESTADO)
FROM TALUNO;

-- QUANTIDADE DE ESTADOS DIFERENTE

SELECT COUNT(DISTINCT(ESTADO))
FROM TALUNO;

-- QUANTIDADE DE REGISTROS POR ESTADO

SELECT ESTADO, COUNT(*) AS QTDE_UF
FROM TALUNO
GROUP BY ESTADO
ORDER BY ESTADO;

-- 

SELECT  SUM(DESCONTO),
        AVG(DESCONTO),  -- FEZ A MÉDIA DESCONSIDERANDO OS NULOS
        COUNT(DESCONTO),
        ROUND(AVG(NVL(DESCONYO,0)),2) -- AQUI OS NULOS FORAM SUBSTITUÍDOS POR ZERO COM O NLV
FROM TCONTRATO;      

-- TOTAL DE CONTRATO POR ESTADO E DATA

SELECT  ALU.ESTADO, TRUNC(CON.DATA) AS DATA,
        SUM(CON.TOTAL) TOTAL, COUNT(*) QTDE 
FROM TALUNO ALU, TCONTRATO CON
WHERE ALU.COD_ALUNO = CON.COD_ALUNO
GROUP BY ALU.ESTADO, TRUNC(CON.DATA)
ORDER BY ALU.ESTADO, DATA DESC;  

-- TOTAL DE CONTRATO POR ESTADO

SELECT  ALU.ESTADO, 
        SUM(CON.TOTAL) TOTAL,
        COUNT(*) QTDE 
FROM TALUNO ALU, TCONTRATO CON
WHERE ALU.COD_ALUNO = CON.COD_ALUNO
GROUP BY ALU.ESTADO
ORDER BY ALU.ESTADO;  

-- HAVING - filtrar coluna com função de grupo
-- HAVING funciona tipo WHERE, mas em colunas com Função de Grupo
-- Ele costuma ser posicionado após o WHERE

SELECT COD_ALUNO, ROUND(AVG(TOTAL)) MEDIA
FROM TCONTRATO
WHERE COD_ALUNO > 0
HAVING ROUND(AVG(TOTAL)) > 500
GROUP BY COD_ALUNO
ORDER BY COD_ALUNO;

SELECT TRUNC(DATA), SUM(TOTAL) TOTAL
FROM TCONTRATO
WHERE COD_CONTRATO > 0
GROUP BY TRUNC(DATA)
HAVING SUM(TOTAL) > 500
ORDER BY TOTAL DESC;

-- MÉDIA MAIS ALTA POR ALUNO

SELECT MAX (AVG(TOTAL))
FROM TCONTRATO
GROUP BY COD_ALUNO;

-- SOMA DOS SALÁRIOS POR ESTADO

SELECT ESTADO, SUM(SALARIO) AS TOTAL
FROM TALUNO
GROUP BY ESTADO
ORDER BY 2 DESC; -- este 2 indica a posição 2 dentro do SELECT (poderia ter escrito TOTAL)




