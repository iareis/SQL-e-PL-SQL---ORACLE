-------------------------------
-- IMPLEMENTANDO CONSTRAINTS --
-------------------------------

--- CONSTRAINTS garantem regras a nível de tabela
--- se 2 tabelas estão unidade por CONSTRAINT isso impossibilita que uma seja excluída

-- TIPOS

/*
NOT NULL: Garante que uma coluna não pode ter o valor NULL.
DEFAULT: Fornece um valor padrão para uma coluna quando nenhum é especificado.
UNIQUE KEY: Garante que todos os valores numa coluna são diferentes.
CHECK: Garante que todos os valores numa coluna satisfazem um determinado critério.
PRIMARY KEY: Utilizado para identificar de forma única uma linha na tabela.
FOREIGN KEY: Constraint: Utilizado para garantir a integridade referencial dos dados.
*/

SELECT * FROM USER_CONSTARINTS;

SELECT * FROM ALL_CONSTAINTS;

-----------------------------------------------------------------
-- EXPLANAÇÃO SOBRE AS TABELAS CRIADAS ATÉ O MOMENTO --

TALUNO
    COD_ALUNO - PK --> Chave Primária --> PRIMARY KEY

TCONTRATO
    COD_CONTRATO - PK --> Chave Primária --> PRIMARY KEY
    COD_ALUNO - KF --> Chave Primária que vem de outra tabela

-----------------------------------------------------------------

CREATE TABLE TCIDADE (
    COD_CIDADE INTEGER NOT NULL,
    NOME VARCHAR2(40),
    CONSTRAINT PK_CIDADE PRIMARY kEY(COD_CIDADE)
);

CREATE TABLE TBAIRRO (
    COD_CIDADE INTEGER NOT NULL,
    COD_BAIRRO INTEGER NOT NULL,
    NOME VARCHAR2(40),
    CONSTRAINT PK_BAIRRO PRIMARY KEY(COD_CIDADE, COD_BAIRRO)
);

--- ADICIONAR UMA CHAVE ESTRANGEIRA
ALTER TABLE TBAIRRO ADD CONSTRAINT FK_COD_CIDADE
FOREIGN KEY(COD_CIDADE)
REFERENCES TCIDADE(COD_CIDADE);

---
CREATE TABLE TRUA (
    COD_RUA INTEGER NOT NULL,
    COD_CIDADE INTEGER,
    COD_BAIRRO INTEGER,
    NOME VARCHAR2(40),
    CONSTRAINT PK_RUA PRIMARY KEY(COD_RUA)
);

ALTER TABLE TRUA ADD CONSTRAINT FK_CIDADEBAIRRO
FOREIGN KEY(COD_CIDADE, COD_BAIRRO)
REFERENCES TBAIRRO(COD_CIDADE, COD_BAIRRO);

---

SELECT * FROM TCIDADE;
SELECT * FROM TBAIRRO;
SELECT * FROM TRUA;

---

CREATE TABLE TPESSOA (
    COD_PESSOA INTEGER NOT NULL,
    TIPO VARCHAR2(1) NOT NULL,      -- (F) fornecedor ou (C) cliente
    NOME VARCHAR2(30) NOT NULL,
    PESSOA VARCHAR2(1) NOT NULL,    -- (F) física ou (J) jurídica
    COD_RUA INTEGER NOT NULL,
    CPF VARCHAR2(15),
    CONSTRAINT PK_PESSOA PRIMARY KEY(COD_PESSOA)
);

--- AGORA VAMOS CRIAR RESTRIÇÕES, POR EXEMPLO PARA O CPF TER APENAS UM POR PESSOA

-- UNIQUE KEY
ALTER TABLE TPESSOA ADD CONSTRAINT UK_CPF UNIQUE(CPF);

-- FAZER A UNIÃO DE PESSOA COM RUA
ALTER TABLE TPESSOA ADD CONSTRAINT FK_PESSOA_RUA
FOREIGN KEY(COD_RUA)
REFERENCES TRUA(COD_RUA);

--- INSERIR ALGUNS REGISTROS

INSERT INTO TCIDADE VALUES(1,'NOVO HAMBURGO');
INSERT INTO TCIDADE VALUES(2,'IVOTI');
INSERT INTO TCIDADE VALUES(3,'SAPIRANGA');
INSERT INTO TCIDADE VALUES(4,'TAQUARA');

SELECT * FROM TCIDADE;

INSERT INTO TBAIRRO VALUES(1,1,'CENTRO');
INSERT INTO TBAIRRO VALUES(2,1,'RIO BRANCO');
INSERT INTO TBAIRRO VALUES(3,1,'CENTRO');
INSERT INTO TBAIRRO VALUES(4,1,'FRITZ');
INSERT INTO TBAIRRO VALUES(5,1,'AMARAL');
INSERT INTO TBAIRRO VALUES(6,1,'EMPRESA');

/*
ESTES DOIS REGISTROS RESULTARAM EM ERRO DEVIDO A TER APENAS 4 CIDADES
E AO TENTAR ADD O BAIRRO 5, NÃO TINHA UMA CIDADE 5...

Erro a partir da linha : 105 no comando -
INSERT INTO TBAIRRO VALUES(5,1,'AMARAL')
Relatório de erros -
ORA-02291: restrição de integridade (IAREIS.FK_COD_CIDADE) violada - chave mãe não localizada

Erro a partir da linha : 106 no comando -
INSERT INTO TBAIRRO VALUES(6,1,'EMPRESA')
Relatório de erros -
ORA-02291: restrição de integridade (IAREIS.FK_COD_CIDADE) violada - chave mãe não localizada
*/

SELECT * FROM TBAIRRO;

INSERT INTO TRUA VALUES(1,1,1,'MARCILIO DIAS');
INSERT INTO TRUA VALUES(2,2,1,'FRITZ');
INSERT INTO TRUA VALUES(3,3,1,'JACOBINA');
INSERT INTO TRUA VALUES(4,3,1,'JOÃO DA SILVA');

SELECT * FROM TRUA;

--- CHECAR UMA INFORMAÇÃO 
ALTER TABLE TPESSOA ADD CONSTRAINT CK_PESSOA_TIPO
CHECK (TIPO IN ('C', 'F'));
/*com isso a coluna tipo aceita apenas as opções C ou F e maiúsculas*/

ALTER TABLE TPESSOA ADD CONSTRAINT CK_PESSOA_JF
CHECK (PESSOA IN('J', 'F'));

--- CASO ALGUMA CONSTRAIT SEJA CRIADA INDEVIDAMENTE ELA PODE SER EXLUÍDA

-- EXCLUIR CONSTRAINT
ALTER TABLE TPESSOA DROP CONSTRAINT nome_constraint;

-- CONTINUAR A INSERIR DADOS
INSERT INTO TPESSOA VALUES (1,'C','MARCIO','F',1,'1234');

INSERT INTO TPESSOA VALUES (2,'R','BEATRIZ','F',2,'123');
/*
Erro a partir da linha : 149 no comando -
INSERT INTO TPESSOA VALUES (2,'R','BEATRIZ','F',2,'123')
Relatório de erros -
ORA-02290: restrição de verificação (IAREIS.CK_PESSOA_TIPO) violada

ERRO DEVIDO A CK_PESSOA_TIPO QUE ACEITA APENAS F OU C
*/
INSERT INTO TPESSOA VALUES (2,'F','BEATRIZ','F',2,'123');

INSERT INTO TPESSOA VALUES (3,'F','PEDRO','F',4,'123');
/*
Erro a partir da linha : 161 no comando -
INSERT INTO TPESSOA VALUES (3,'F','PEDRO','F',4,'123')
Relatório de erros -
ORA-00001: restrição exclusiva (IAREIS.UK_CPF) violada

ERRO DEVIDO A UK_CPF QUE NÃO ACEITA REPETIÇÕES
*/
INSERT INTO TPESSOA VALUES (3,'F','PEDRO','F',4,'124');

INSERT INTO TPESSOA VALUES (4,'C','MARCIA','J',5,'143');
/*
Erro a partir da linha : 172 no comando -
INSERT INTO TPESSOA VALUES (4,'C','MARCIA','J',5,'143')
Relatório de erros -
ORA-02291: restrição de integridade (IAREIS.FK_PESSOA_RUA) violada - chave mãe não localizada

ERRO DEVIDO A FK_PESSOA_RUA POIS TEMOS APENAS 4 RUAS, ENTÃO NÃO PODE IR 5
*/
INSERT INTO TPESSOA VALUES (4,'C','MARCIA','J',3,'143');

SELECT * FROM TPESSOA;

---
---APAGAR UMA CONSTRAINT
ALTER TABLE TPESSOA DROP CONSTRAINT NOME_DA_CONSTRAINT
CASCADE CONSTRAINT;

-- CHECK
ALTER TABLE TCONTRATO ADD CONSTRAINT CK_CONTRATO_DESCONTO
CHECK (DESCONTO BETWEEN 0 AND 30);

SELECT * FROM TCONTRATO;

---
-- DESABILITANDO / HABILITANDO CONSTRAINT
ALTER TABLE TPESSOA DISABLE CONSTRAINT UK_CPF;

ALTER TABLE TPESSOA ENABLE CONSTRAINT UK_CPF;

-- EXIBIR AS CONSTRAINT DE UMA TABELA
SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TPESSOA';

-- MOSTRA A CONSTRAINT E SUAS COLUNAS ASSOCIADAS
SELECT CONSTRAINT_NAME, COLUMN_NAME
FROM USER_CONS_COLUMNS
WHERE TABLE_NAME = 'TPESSOA';

SELECT OBJECT_NAME, OBJECT_TYPE
FROM USER_OBJECTS
WHERE OBJECT_NAME IN ('TPESSOA');

SELECT OBJECT_NAME, OBJECT_TYPE
FROM USER_OBJECTS;

SELECT * FROM TPESSOA;

COMMIT;




