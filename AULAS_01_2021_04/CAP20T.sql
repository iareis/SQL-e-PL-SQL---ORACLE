



--TESTE DE IMPRESSÃO
SELECT * FROM TALUNO;





CREATE OR REPLACE PROCEDURE TUDODO_ALUNO
(pREGISTRO IN OUT TALUNO%ROWTYPE)
IS 
    CURSOR TUDO IS
        SELECT * FROM TALUNO
        WHERE COD_ALUNO = pREGISTRO.COD_ALUNO;
BEGIN
    OPEN TUDO;
    FETCH TUDO INTO pREGISTRO;
    CLOSE TUDO;
END;



SELECT * FROM TALUNO;




DECLARE 
    REGISTRO TALUNO%ROWTYPE;
    X DATE;
BEGIN 
    REGISTRO.COD_ALUNO := 11;
    --vID := TRUNC(SYSDATE) - TRUNC(REGISTRO.NASCIMENTO);
    --vID := SYSDATE - REGISTRO.NASCIMENTO;
    --vID := TRUNC(SYSDATE) - TRUNC(REGISTRO.NASCIMENTO);
    TUDODO_ALUNO(REGISTRO);
    DBMS_OUTPUT.PUT_LINE('NOME: '||REGISTRO.NOME);
    DBMS_OUTPUT.PUT_LINE(REGISTRO.CIDADE||' - '||REGISTRO.ESTADO);
    --DBMS_OUTPUT.PUT_LINE('DATA DE NASCIMENTO: '||REGISTRO.NASCIMENTO||' ('||vID||' ANOS)');
    DBMS_OUTPUT.PUT_LINE('DATA DE NASCIMENTO: '||REGISTRO.NASCIMENTO||' ('||X||' ANOS)');
    /*DBMS_OUTPUT.PUT_LINE(' ');
    DBMS_OUTPUT.PUT_LINE(' ');
    DBMS_OUTPUT.PUT_LINE(' ');
    DBMS_OUTPUT.PUT_LINE(REGISTRO.NOME);
    DBMS_OUTPUT.PUT_LINE(REGISTRO.CIDADE);
    DBMS_OUTPUT.PUT_LINE(REGISTRO.CEP);
    DBMS_OUTPUT.PUT_LINE(REGISTRO.ESTADO);
    DBMS_OUTPUT.PUT_LINE(REGISTRO.SALARIO);
    DBMS_OUTPUT.PUT_LINE(SYSDATE - REGISTRO.NASCIMENTO);*/
END;



============================================================================================

DESCRIBE TCONTRATO;

SELECT * FROM USER_TABLES;
SELECT * FROM USER_OBJECTS;
SELECT * FROM USER_CATALOG;

SELECT * FROM USER_COL_COMMENTS WHERE TABLE_NAME='TCONTRATO';

SELECT * FROM USER_TAB_COMMENTS WHERE TABLE_NAME='TCONTRATO';

SELECT * FROM USER_CONSTRAINTS ORDER BY INDEX_NAME;

SELECT * FROM ALL_CONSTRAINTS;

SELECT * FROM TBAIRRO;


============================================================================================

CREATE TABLE TAB_04 (
    COD_TAB4 INTEGER NOT NULL,
    NOME VARCHAR2(40),
    CONSTRAINT PK_TAB_04 PRIMARY kEY(COD_TAB4));

CREATE TABLE TAB_05 (
    COD_TAB4 INTEGER NOT NULL,
    COD_TAB5 INTEGER NOT NULL,
    NOME VARCHAR2(40),
    CONSTRAINT PK_TAB_05 PRIMARY KEY(COD_TAB4, COD_TAB5));

--- ADICIONAR UMA CHAVE ESTRANGEIRA
ALTER TABLE TAB_05 ADD CONSTRAINT FK_COD_TAB4
FOREIGN KEY(COD_TAB4)
REFERENCES TAB_04(COD_TAB4);


INSERT INTO TALUNO (COD_ALUNO, NOME)
VALUES (SEQ_ALUNO1.NEXTVAL, '&NOME');
============================================================================================


--TABELA DE FUNCIONÁRIOS
CREATE TABLE IA_FUNC(
    COD_FUNC    INTEGER, NOT NULL, PRIMARY KEY,
    CADASTRO    NUMBER,
    NOME_FUNC   VARCHAR(30),
    SOBRENOME   VARCHAR(30),
    GENEROFUN   CHAR(1),
    NASCIMENT   DATE,
    CIDADE      VARCHAR(30),
    UF          CHAR(2),
    ESTADOCVL   VARCHAR(15)
);

CREATE TABLE PRODUTOS(
    COD_PRODUTO INTEGER, NOT NULL, PRIMARY KEY,
    COD_ITEM    NUMBER,
    NOME_ITEM   VARCHAR(20)
);

/*
CREATE TABLE LOJA01(
    COD_LOJA1   INTEGER, NOT NULL, PRIMARY KEY,
    COD_PRODUTO VARCHAR(10),
    COD_VALOR   NUMBER(7,2)
);

CREATE TABLE LOJA02(
    COD_LOJA2   INTEGER, NOT NULL, PRIMARY KEY,
    COD_PRODUTO VARCHAR(10),
    COD_VALOR   NUMBER(7,2)
);
*/


CREATE TABLE VENDAS(
    COD_VENDAS INTEGER, NOT NULL, PRIMARY KEY,
    COD_FUNC
    COD_ITEM
    QUANTIDADE
    TOTAL
    CRED1
    CRED2
    CRED3
);











